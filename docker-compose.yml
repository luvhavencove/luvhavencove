services:
  nginx:
    depends_on:
      backend:
        condition: service_healthy
      storefront:
        condition: service_started
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    healthcheck:
      test: service nginx status || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    volumes:
      - letsencrypt-etc:/etc/letsencrypt
      - letsencrypt-var:/var/lib/letsencrypt
      - webroot:/var/www/_letsencrypt
      - nginx:/etc/nginx
    develop:
      watch:
        - path: ./nginx/nginx
          target: /etc/nginx
          action: sync+restart
    networks:
      - nginx
  backend:
    depends_on:
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
      meilisearch-init:
        condition: service_completed_successfully
        required: false
      meilisearch:
        condition: service_healthy
        required: true
    build:
      context: ./luvhavencove-store
      dockerfile: Dockerfile
    command: ./run.sh
    ports:
      - "7001:7001"
      - "9000:9000"
    env_file:
      - path: ./luvhavencove-store/.env
        required: false
    environment:
      - NODE_ENV=development
      - MEILISEARCH_API_KEY=/run/secrets/meilisearch_master_key
      - PAYPAL_CLIENT_SECRET=/run/secrets/paypal_client_secret
    secrets:
      - meilisearch_master_key
      - paypal_client_secret
    healthcheck:
      test: >
        curl --fail http://localhost:9000/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 15s
    volumes:
      - public_data:/data/public
      - shared_data:/data/shared
    develop:
      watch:
        - path: ./luvhavencove-store
          action: rebuild
    networks:
      - nginx
  storefront:
    depends_on:
      backend:
        condition: service_healthy
    build:
      context: ./luvhavencove-store-storefront
      dockerfile: Dockerfile
    command: ./run.sh
    ports:
      - "8000:8000"
    env_file:
      - path: ./luvhavencove-store-storefront/.env
        required: false
    environment:
      - NODE_ENV=development
    healthcheck:
      test: curl --fail http://localhost:8000/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    volumes:
      - public_data:/data/public
    develop:
      watch:
        - path: ./luvhavencove-store-storefront
          action: rebuild
    networks:
      - nginx
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 5s
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_pass
      - POSTGRES_DB=$POSTGRES_DB
    secrets:
      - postgres_pass
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nginx
  redis:
    image: redis
    ports:
      - "6379:6379"
    command: redis-server /run/secrets/redis.conf
    secrets:
      - redis.conf
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 5s
    volumes:
      - redisdata:/data
    networks:
      - nginx
  meilisearch:
    image: getmeili/meilisearch
    ports:
      - "7700:7700"
    healthcheck:
      test: curl --fail http://localhost:7700/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 5s
    environment:
      - MEILISEARCH_MASTER_KEY=/run/secrets/meilisearch_master_key
    secrets:
      - meilisearch_master_key
    command: >
      /bin/sh -c "meilisearch --master-key=$(cat $$MEILISEARCH_MASTER_KEY)"
    volumes:
      - public_data:/data/public
      - shared_data:/data/shared
    networks:
      - nginx
  meilisearch-init:
    depends_on:
      - meilisearch
    build:
      context: ./meilisearch-init
      dockerfile: Dockerfile
    environment:
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=/run/secrets/meilisearch_master_key
    secrets:
      - meilisearch_master_key
    volumes:
      - public_data:/data/public
      - shared_data:/data/shared
volumes:
  nginx:
  pgdata:
  redisdata:
  shared_data:
  public_data:
  letsencrypt-etc:
  letsencrypt-var:
  webroot:
secrets:
  cloudflare_api_token:
    file: ./secrets/cloudflare_api_token.ini
  meilisearch_master_key:
    file: ./secrets/meilisearch_master_key
  paypal_client_secret:
    file: ./secrets/paypal_client_secret
  postgres_pass:
    file: ./secrets/postgres_pass
  redis.conf:
    file: ./secrets/redis.conf
networks:
  nginx:
    driver: "bridge"
